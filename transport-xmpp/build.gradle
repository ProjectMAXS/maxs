plugins {
	id 'org.projectmaxs.common-conventions'
}

repositories {
  mavenLocal()
  maven() {
	url 'https://www.igniterealtime.org/archiva/repository/maven/'
  }
}

android {
	namespace "org.projectmaxs.transport.xmpp"

	buildTypes {
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android.txt'),
				'proguard-project.txt'
			if (signingKeystoreAvailable) {
				signingConfig signingConfigs.release
			}
		}
		debug {
			minifyEnabled false
		}
	}

}

ext {
	smackVersion = '4.5.0-beta5'
	minidnsVersion = '1.1.0-alpha3'
	uniqueSmackSnapshot = smackVersion.split('-').length >= 2
}

dependencies {
	implementation "org.igniterealtime.smack:smack-android-extensions:$smackVersion"
	implementation "org.igniterealtime.smack:smack-experimental:$smackVersion"
	implementation "org.igniterealtime.smack:smack-tcp:$smackVersion"
	implementation "org.minidns:minidns-dnssec:$minidnsVersion"
	implementation project(':transport-xmpp:memorizingTrustManager')

	if (uniqueSmackSnapshot) {
		// Gradle unique snapshot artifacts will delcare dependencies
		// to artifcats of subprojects the same build using non-unique
		// snapshot versions. This means that we will get the unique
		// snapshot of .e.g smack-tcp, but the artifact of smack-core
		// will be any matching non-unique snapshot.
		// Hence we use some gradle magic as workaround to strictly
		// pin the version to the unique snapshot.
		// See
		// - https://discuss.gradle.org/t/unique-snapshot-dependencies-for-projects-own-subproject-in-pom-not-declared/35692?u=flow
		// - https://discuss.gradle.org/t/how-to-force-a-dependency-version-while-also-substituting-a-transitive-dependency/26759/4?u=flow
		components.all {
			allVariants {
				withDependencies { deps ->
					deps.each { dep ->
						if (dep.group == 'org.igniterealtime.smack') {
							dep.version {
								strictly smackVersion
							}
						}
					}
				}
			}
		}
	}
}

configurations {
	all*.exclude group: 'xpp3', module: 'xpp3'
	all*.exclude group: 'org.codelibs', module: 'xpp3'
}
