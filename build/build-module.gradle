buildscript {
	repositories {
		mavenCentral()
		google()
		jcenter()
	}

	dependencies {
		classpath 'com.android.tools.build:gradle:4.1.3'
	}
}

def keystoreProperties = new Properties()

def userKeystorePropertiesFile = new File(System.getProperty("user.home"), ".config/maxs/keystore.properties")
if (userKeystorePropertiesFile.exists()) {
	keystoreProperties.load(new FileInputStream(userKeystorePropertiesFile))
}

def keystorePropertiesFile = rootProject.file("keystore.properties")
if (keystorePropertiesFile.exists()) {
	keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

def keystorePropertiesFileString = System.getProperty("keystorePropertiesFile")
if (keystorePropertiesFileString != null) {
	keystoreProperties.load(new FileInputStream(file(keystorePropertiesFileString)))
}

// Defaults for the modules.
ext {
	maxsModuleMinSdkVersion = 19
	maxsModuleTargetSdkVersion = 23
	maxsModuleCompileSdkVersion = 24
}

// Which may be overriden by a module individial module-settings.gradle file.
def moduleSettingsFile = rootProject.file("module-settings.gradle")
if (moduleSettingsFile.exists()) {
	apply from: moduleSettingsFile
}

apply plugin: 'com.android.application'

repositories {
  mavenCentral()
  google()
  jcenter()
}

ext {
	signingKeystoreAvailable = keystoreProperties.getProperty('keyPassword') != null
}

android {
	compileSdkVersion maxsModuleCompileSdkVersion

	defaultConfig {
		minSdkVersion maxsModuleMinSdkVersion
		targetSdkVersion maxsModuleTargetSdkVersion
	}

	sourceSets {
		main {
			manifest.srcFile 'AndroidManifest.xml'
			java.srcDirs = ['src']
			aidl.srcDirs = ['src']
			res.srcDirs = ['res']
		}
	}

	compileOptions {
		sourceCompatibility JavaVersion.VERSION_1_8
		targetCompatibility JavaVersion.VERSION_1_8
	}

	signingConfigs {
		if (signingKeystoreAvailable) {
			release {
				keyAlias keystoreProperties['keyAlias']
				keyPassword keystoreProperties['keyPassword']
				storeFile file(keystoreProperties['storeFile'])
				storePassword keystoreProperties['storePassword']
			}
		}
	}

	buildTypes {
		release {
			minifyEnabled false
			if (signingKeystoreAvailable) {
				signingConfig signingConfigs.release
			}
		}
		debug {
			minifyEnabled false
		}
	}

}

dependencies {
	implementation 'eu.geekplace.iesp:iesp-aar:0.0.2'
}

task makePrebuild(type:Exec) {
	commandLine 'make', 'prebuild'
}

preBuild.dependsOn makePrebuild
